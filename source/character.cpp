#include "character.h"
#include "main.h"
#include <bits/stdc++.h>
using namespace std;

Character::Character(int x, int y, bool isImposter){
    this->position = glm::vec3(x*1.0, y*1.0, 0.0);
    this->rotation = 0;

    this->isImposter = isImposter;
    this->health = 100;

    this->factor = 1.0;
    this->flag = "";
    this->ticks = 0;

    // GLfloat vertex_buffer_data[] = {
    //     0.25f, 0.25f, 0.0f, 
    //     0.75f, 0.25f, 0.0f, 
    //     0.25f, 0.75f, 0.0f, 
    //     0.75f, 0.25f, 0.0f, 
    //     0.25f, 0.75f, 0.0f, 
    //     0.75f, 0.75f, 0.0f,
    // };

    // GLfloat g_color_buffer_data[] = {

    //     0.543f,  0.021f,  0.978f,
    //     0.543f,  0.021f,  0.978f,
    //     0.543f,  0.021f,  0.978f,

    //     0.543f,  0.021f,  0.978f,
    //     0.543f,  0.021f,  0.978f,
    //     0.543f,  0.021f,  0.978f,
    // };
    
    // this->object = create3DObject(GL_TRIANGLES, 2*3, vertex_buffer_data, g_color_buffer_data, GL_FILL);

    GLfloat vertex_buffer_data[] = {
        0.25f, 0.32273f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.22513f, 0.32727f, 0.0f, 
        0.22513f, 0.32727f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.215f, 0.33182f, 0.0f, 
        0.215f, 0.33182f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.20735f, 0.33636f, 0.0f, 
        0.20735f, 0.33636f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.20101f, 0.34091f, 0.0f, 
        0.20101f, 0.34091f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.19551f, 0.34545f, 0.0f, 
        0.19551f, 0.34545f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.19063f, 0.35f, 0.0f, 
        0.19063f, 0.35f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.18621f, 0.35455f, 0.0f, 
        0.18621f, 0.35455f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.18218f, 0.35909f, 0.0f, 
        0.18218f, 0.35909f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.17845f, 0.36364f, 0.0f, 
        0.17845f, 0.36364f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.175f, 0.36818f, 0.0f, 
        0.175f, 0.36818f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.17178f, 0.37273f, 0.0f, 
        0.17178f, 0.37273f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.16876f, 0.37727f, 0.0f, 
        0.16876f, 0.37727f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.16592f, 0.38182f, 0.0f, 
        0.16592f, 0.38182f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.16325f, 0.38636f, 0.0f, 
        0.16325f, 0.38636f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.16073f, 0.39091f, 0.0f, 
        0.16073f, 0.39091f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.15835f, 0.39545f, 0.0f, 
        0.15835f, 0.39545f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.15609f, 0.4f, 0.0f, 
        0.15609f, 0.4f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.15395f, 0.40455f, 0.0f, 
        0.15395f, 0.40455f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.15192f, 0.40909f, 0.0f, 
        0.15192f, 0.40909f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.15f, 0.41364f, 0.0f, 
        0.15f, 0.41364f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.14817f, 0.41818f, 0.0f, 
        0.14817f, 0.41818f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.14644f, 0.42273f, 0.0f, 
        0.14644f, 0.42273f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.14479f, 0.42727f, 0.0f, 
        0.14479f, 0.42727f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.14323f, 0.43182f, 0.0f, 
        0.14323f, 0.43182f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.14175f, 0.43636f, 0.0f, 
        0.14175f, 0.43636f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.14034f, 0.44091f, 0.0f, 
        0.14034f, 0.44091f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.13901f, 0.44545f, 0.0f, 
        0.13901f, 0.44545f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.13775f, 0.45f, 0.0f, 
        0.13775f, 0.45f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.13656f, 0.45455f, 0.0f, 
        0.13656f, 0.45455f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.13544f, 0.45909f, 0.0f, 
        0.13544f, 0.45909f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.13438f, 0.46364f, 0.0f, 
        0.13438f, 0.46364f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.13338f, 0.46818f, 0.0f, 
        0.13338f, 0.46818f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.13245f, 0.47273f, 0.0f, 
        0.13245f, 0.47273f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.13157f, 0.47727f, 0.0f, 
        0.13157f, 0.47727f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.13076f, 0.48182f, 0.0f, 
        0.13076f, 0.48182f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.13f, 0.48636f, 0.0f, 
        0.13f, 0.48636f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.1293f, 0.49091f, 0.0f, 
        0.1293f, 0.49091f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.12865f, 0.49545f, 0.0f, 
        0.12865f, 0.49545f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.12806f, 0.5f, 0.0f, 
        0.12806f, 0.5f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.12753f, 0.50455f, 0.0f, 
        0.12753f, 0.50455f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.12704f, 0.50909f, 0.0f, 
        0.12704f, 0.50909f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.12661f, 0.51364f, 0.0f, 
        0.12661f, 0.51364f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.12623f, 0.51818f, 0.0f, 
        0.12623f, 0.51818f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.1259f, 0.52273f, 0.0f, 
        0.1259f, 0.52273f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.12563f, 0.52727f, 0.0f, 
        0.12563f, 0.52727f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.1254f, 0.53182f, 0.0f, 
        0.1254f, 0.53182f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.12523f, 0.53636f, 0.0f, 
        0.12523f, 0.53636f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.1251f, 0.54091f, 0.0f, 
        0.1251f, 0.54091f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.12502f, 0.54545f, 0.0f, 
        0.12502f, 0.54545f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.125f, 0.55f, 0.0f, 
        0.125f, 0.55f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.12502f, 0.55455f, 0.0f, 
        0.12502f, 0.55455f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.1251f, 0.55909f, 0.0f, 
        0.1251f, 0.55909f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.12523f, 0.56364f, 0.0f, 
        0.12523f, 0.56364f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.1254f, 0.56818f, 0.0f, 
        0.1254f, 0.56818f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.12563f, 0.57273f, 0.0f, 
        0.12563f, 0.57273f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.1259f, 0.57727f, 0.0f, 
        0.1259f, 0.57727f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.12623f, 0.58182f, 0.0f, 
        0.12623f, 0.58182f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.12661f, 0.58636f, 0.0f, 
        0.12661f, 0.58636f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.12704f, 0.59091f, 0.0f, 
        0.12704f, 0.59091f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.12753f, 0.59545f, 0.0f, 
        0.12753f, 0.59545f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.12806f, 0.6f, 0.0f, 
        0.12806f, 0.6f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.12865f, 0.60455f, 0.0f, 
        0.12865f, 0.60455f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.1293f, 0.60909f, 0.0f, 
        0.1293f, 0.60909f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.13f, 0.61364f, 0.0f, 
        0.13f, 0.61364f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.13076f, 0.61818f, 0.0f, 
        0.13076f, 0.61818f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.13157f, 0.62273f, 0.0f, 
        0.13157f, 0.62273f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.13245f, 0.62727f, 0.0f, 
        0.13245f, 0.62727f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.13338f, 0.63182f, 0.0f, 
        0.13338f, 0.63182f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.13438f, 0.63636f, 0.0f, 
        0.13438f, 0.63636f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.13544f, 0.64091f, 0.0f, 
        0.13544f, 0.64091f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.13656f, 0.64545f, 0.0f, 
        0.13656f, 0.64545f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.13775f, 0.65f, 0.0f, 
        0.13775f, 0.65f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.13901f, 0.65455f, 0.0f, 
        0.13901f, 0.65455f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.14034f, 0.65909f, 0.0f, 
        0.14034f, 0.65909f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.14175f, 0.66364f, 0.0f, 
        0.14175f, 0.66364f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.14323f, 0.66818f, 0.0f, 
        0.14323f, 0.66818f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.14479f, 0.67273f, 0.0f, 
        0.14479f, 0.67273f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.14644f, 0.67727f, 0.0f, 
        0.14644f, 0.67727f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.14817f, 0.68182f, 0.0f, 
        0.14817f, 0.68182f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.15f, 0.68636f, 0.0f, 
        0.15f, 0.68636f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.15192f, 0.69091f, 0.0f, 
        0.15192f, 0.69091f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.15395f, 0.69545f, 0.0f, 
        0.15395f, 0.69545f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.15609f, 0.7f, 0.0f, 
        0.15609f, 0.7f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.15835f, 0.70455f, 0.0f, 
        0.15835f, 0.70455f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.16073f, 0.70909f, 0.0f, 
        0.16073f, 0.70909f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.16325f, 0.71364f, 0.0f, 
        0.16325f, 0.71364f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.16592f, 0.71818f, 0.0f, 
        0.16592f, 0.71818f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.16876f, 0.72273f, 0.0f, 
        0.16876f, 0.72273f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.17178f, 0.72727f, 0.0f, 
        0.17178f, 0.72727f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.175f, 0.73182f, 0.0f, 
        0.175f, 0.73182f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.17845f, 0.73636f, 0.0f, 
        0.17845f, 0.73636f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.18218f, 0.74091f, 0.0f, 
        0.18218f, 0.74091f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.18621f, 0.74545f, 0.0f, 
        0.18621f, 0.74545f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.19063f, 0.75f, 0.0f, 
        0.19063f, 0.75f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.19551f, 0.75455f, 0.0f, 
        0.19551f, 0.75455f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.20101f, 0.75909f, 0.0f, 
        0.20101f, 0.75909f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.20735f, 0.76364f, 0.0f, 
        0.20735f, 0.76364f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.215f, 0.76818f, 0.0f, 
        0.215f, 0.76818f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.22513f, 0.77273f, 0.0f, 
        0.22513f, 0.77273f, 0.0f, 
        0.25f, 0.54545f, 0.0f, 
        0.25f, 0.77727f, 0.0f, 
        0.25f, 0.31818f, 0.0f, 
        0.75f, 0.31818f, 0.0f, 
        0.75f, 0.77273f, 0.0f, 
        0.25f, 0.77273f, 0.0f, 
        0.75f, 0.77273f, 0.0f, 
        0.25f, 0.31818f, 0.0f, 
        0.325f, 0.5f, 0.0f, 
        0.475f, 0.5f, 0.0f, 
        0.475f, 0.77273f, 0.0f, 
        0.325f, 0.77273f, 0.0f, 
        0.475f, 0.77273f, 0.0f, 
        0.325f, 0.5f, 0.0f, 
        0.75f, 0.31818f, 0.0f, 
        0.85f, 0.31818f, 0.0f, 
        0.85f, 0.5f, 0.0f, 
        0.75f, 0.5f, 0.0f, 
        0.85f, 0.5f, 0.0f, 
        0.75f, 0.31818f, 0.0f, 
        0.75f, 0.59091f, 0.0f, 
        0.85f, 0.59091f, 0.0f, 
        0.85f, 0.77273f, 0.0f, 
        0.75f, 0.77273f, 0.0f, 
        0.85f, 0.77273f, 0.0f, 
        0.75f, 0.59091f, 0.0f, 
        0.4f, 0.18182f, 0.0f, 
        0.7f, 0.18182f, 0.0f, 
        0.7f, 0.31818f, 0.0f, 
        0.4f, 0.31818f, 0.0f, 
        0.7f, 0.31818f, 0.0f, 
        0.4f, 0.18182f, 0.0f,
    };

    vector<GLfloat> color_vertices;

    if(isImposter){
        color_vertices = {
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,
            0.13333f, 0.1451f, 0.86667f,

            0.2902f, 0.39216f, 0.42353f,
            0.2902f, 0.39216f, 0.42353f,
            0.2902f, 0.39216f, 0.42353f,

            0.58431f, 0.78039f, 0.87059f,
            0.58431f, 0.78039f, 0.87059f,
            0.58431f, 0.78039f, 0.87059f,

            0.07059f, 0.04314f, 0.57647f,
            0.07059f, 0.04314f, 0.57647f,
            0.07059f, 0.04314f, 0.57647f,

            0.07059f, 0.04314f, 0.57647f,
            0.07059f, 0.04314f, 0.57647f,
            0.07059f, 0.04314f, 0.57647f,

            0.07059f, 0.04314f, 0.57647f,
            0.07059f, 0.04314f, 0.57647f,
            0.07059f, 0.04314f, 0.57647f,

            0.07059f, 0.04314f, 0.57647f,
            0.07059f, 0.04314f, 0.57647f,
            0.07059f, 0.04314f, 0.57647f,

            0.07059f, 0.04314f, 0.57647f,
            0.07059f, 0.04314f, 0.57647f,
            0.07059f, 0.04314f, 0.57647f,

            0.07059f, 0.04314f, 0.57647f,
            0.07059f, 0.04314f, 0.57647f,
            0.07059f, 0.04314f, 0.57647f,
        };
    }
    else {
        color_vertices = {
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,
            0.75294f, 0.08235f, 0.00784f,

            0.2902f, 0.39216f, 0.42353f,
            0.2902f, 0.39216f, 0.42353f,
            0.2902f, 0.39216f, 0.42353f,

            0.58431f, 0.78039f, 0.87059f,
            0.58431f, 0.78039f, 0.87059f,
            0.58431f, 0.78039f, 0.87059f,

            0.47059f, 0.04314f, 0.22353f,
            0.47059f, 0.04314f, 0.22353f,
            0.47059f, 0.04314f, 0.22353f,

            0.47059f, 0.04314f, 0.22353f,
            0.47059f, 0.04314f, 0.22353f,
            0.47059f, 0.04314f, 0.22353f,

            0.47059f, 0.04314f, 0.22353f,
            0.47059f, 0.04314f, 0.22353f,
            0.47059f, 0.04314f, 0.22353f,

            0.47059f, 0.04314f, 0.22353f,
            0.47059f, 0.04314f, 0.22353f,
            0.47059f, 0.04314f, 0.22353f,

            0.47059f, 0.04314f, 0.22353f,
            0.47059f, 0.04314f, 0.22353f,
            0.47059f, 0.04314f, 0.22353f,

            0.47059f, 0.04314f, 0.22353f,
            0.47059f, 0.04314f, 0.22353f,
            0.47059f, 0.04314f, 0.22353f,
        };
    } 

    GLfloat g_color_buffer_data[color_vertices.size()];
    for(int i=0; i<color_vertices.size(); i++){
        g_color_buffer_data[i] = color_vertices[i];
    }
    this->object = create3DObject(GL_TRIANGLES, 110*3, vertex_buffer_data, g_color_buffer_data, GL_FILL);


}

void Character::draw(glm::mat4 VP) {
    Matrices.model = glm::mat4(1.0f);
    glm::mat4 translate = glm::translate (this->position);    // glTranslatef
    glm::mat4 rotate    = glm::rotate((float) (this->rotation * M_PI / 180.0f), glm::vec3(1, 0, 0));
    // No need as coords centered at 0, 0, 0 of cube arouund which we waant to rotate
    // rotate          = rotate * glm::translate(glm::vec3(0, -0.6, 0));
    Matrices.model *= (translate * rotate);
    glm::mat4 MVP = VP * Matrices.model;
    glUniformMatrix4fv(Matrices.MatrixID, 1, GL_FALSE, &MVP[0][0]);
    draw3DObject(this->object);
}

void Character::tick(){
}

void Character::move(float x, float y, std::vector<Cell> cells, bool isX){
    // if(isX){
    //     // change in x
    //     if(x > this->position.x){
    //         // right coordinates
    //         float width = 0.75-0.25;
    //         float beforeX = this->position.x+width;
    //         for(auto cell : cells){
                
    //         }
    //     }
    // }
    // else{
    //     // change in y
    // }

}

bool Character::checkMove(map<pair<int, int>, vector<pair<int, int>>> graph, float x, float y){
    
    // adding 0.5, trick to fix precision while converting to int
    int oldX = this->position.x + 0.5;
    int oldY = this->position.y+ 0.5;

    int newX = x+ 0.5;;
    int newY = y+ 0.5;;

    // in opengl, while plotting, y and x are being considered as in reverse [x,y], but graph contains the values of order [y,x]

    pair<int, int> newPos = make_pair(newX, newY);

    vector<pair<int, int>> neighbours = graph[make_pair(oldX, oldY)];

    for(auto pos : neighbours){
        if(newPos == pos){
            return true;
        }
    }

    return false;
}

void Character::tick_input(GLFWwindow *window, map<pair<int, int>, vector<pair<int, int>>> graph, bool isGameOver) {
    float unitStep = 1.0, speed = 0.1, cutoff = 0.0001;
    
    if(fabs(this->factor - unitStep) < cutoff){ // factor == 1.0
        if(!isGameOver){
            if(glfwGetKey(window, GLFW_KEY_S) == GLFW_PRESS){
                if(this->checkMove(graph, this->position.x+unitStep, this->position.y)){
                    this->flag = "+x";
                    this->factor = 0.0;
                }
            }
            if(glfwGetKey(window, GLFW_KEY_W) == GLFW_PRESS){
                if(this->checkMove(graph, this->position.x-unitStep, this->position.y)){
                    this->flag = "-x";
                    this->factor = 0.0;
                }
            }
            if(glfwGetKey(window, GLFW_KEY_D) == GLFW_PRESS){
                if(this->checkMove(graph, this->position.x, this->position.y+unitStep)){
                    this->flag = "+y";
                    this->factor = 0.0;
                }
            }
            if(glfwGetKey(window, GLFW_KEY_A) == GLFW_PRESS){
                if(this->checkMove(graph, this->position.x, this->position.y-unitStep)){
                    this->flag = "-y";
                    this->factor = 0.0;
                }
            }
        }
    }
    else{
        if(this->flag == "+x"){
            this->position.x+=speed;
        }
        else if(this->flag == "-x"){
            this->position.x-=speed;
        }
        else if(this->flag == "+y"){
            this->position.y+=speed;
        }
        else if(this->flag == "-y"){
            this->position.y-=speed;
        }
        this->factor += speed;
        // if(fabs(factor - unitStep) < cutoff){
        //     this_thread::sleep_for(chrono::microseconds(10));
        // }
    }
}

void Character::findPlayerAndMove(Character player, map<pair<int, int>, vector<pair<int, int>>> graph){
    this->ticks++;
    this->ticks = (this->ticks) % 50;
    float unitStep = 1.0, speed = 0.1, cutoff = 0.0001;

    if(this->isImposter){
        if(fabs((this->factor) - unitStep) < cutoff){ 
            if((this->ticks) == 0){
                pair<int, int> head, actual_location;
                head = actual_location = make_pair((int)(this->position.x + 0.5), (int)(this->position.y + 0.5));
                pair<int, int> player_location = make_pair((int)(player.position.x + 0.5), (int)(player.position.y + 0.5));
                queue<pair<int, int>> q;


                // using BFS
                map<pair<int, int>, pair<int, int>> parent;
                map<pair<int, int>, int> visited;
                q.push(head);
                visited[head] = 1;
                bool flag = false;
                while(q.size() > 0){
                    head = q.front();
                    q.pop();
                    vector<pair<int, int>> neighbours = graph[head];
                    for(auto node: neighbours){
                        if(!visited[node]){
                            parent[node] = head;
                            if(node == player_location){
                                flag = true;
                                break;
                            }
                            q.push(node);
                            visited[node] = 1;
                        }
                    }
                    if(flag){
                        break;
                    }
                }

                // backtrack to starting node
                parent[actual_location] = actual_location;
                head = player_location;
                while(parent[head] != actual_location){
                    head = parent[head];
                }

                // cout << " -- > " << head.second << " " << head.first << endl;

                int oldX = actual_location.first;
                int oldY = actual_location.second;
                int newX = head.first;
                int newY = head.second;

                if(oldY == newY){
                    if(newX > oldX){
                        this->flag = "+x";
                        this->factor = 0.0;
                    }
                    else if(newX < oldX){
                        this->flag = "-x";
                        this->factor = 0.0;
                    }
                }
                else{
                    if(newY > oldY){
                        this->flag = "+y";
                        this->factor = 0.0;
                    }
                    else if(newY < oldY){
                        this->flag = "-y";
                        this->factor = 0.0;
                    }
                }
            }
        }
        else{
            if(this->flag == "+x"){
                this->position.x+=speed;
            }
            else if(this->flag == "-x"){
                this->position.x-=speed;
            }
            else if(this->flag == "+y"){
                this->position.y+=speed;
            }
            else if(this->flag == "-y"){
                this->position.y-=speed;
            }
            this->factor += speed;
        }
    }

}